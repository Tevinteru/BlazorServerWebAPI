@page "/Delete/{id}"
@inject StudentService studentService
@inject NavigationManager NavigationManager

<h1>Удалить студента</h1>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label>Студент: Id</label>
                <label>@_students.Id</label>
            </div>
            <div class="form-group">
                <label>Студент: Фамилия</label>
                <label>@_students.Surname</label>
            </div>
             <div class="form-group">
                <label>Студент: Имя</label>
                <label>@_students.Name</label>
            </div>
            <div class="form-group">
                <label>Студент: Отчество</label>
                <label>@_students.Otch</label>
            </div>
            <div class="form-group">
                <label>Студент: Группа</label>
                <label>@_students.Group</label>
            </div>
             <div class="form-group">
                <label>Студент: День рождения</label>
                <label>@_students.BirthDate</label>
            </div>
            <div class="form-group">
                <label>Студент: Ср. балл</label>
                <label>@_students.AverageScore</label>
            </div>
            <div class="form-group">
                <label>Студент: Стипендия</label>
                <label>@_students.Scholarship</label>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" class="btn btn-danger" @onclick="@Delete" value="Удалить" />
                    <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Отмена" />
                </div>
            </div>
        </div>
    </div>
</form>


@code {
    [Parameter]
    public string Id { get; set; }
    Student _students = new Student();

    protected override async Task OnInitializedAsync()
    {
        _students = await Task.Run(() => studentService.GetStudentAsync(Convert.ToInt32(Id)));
    }
    protected async void Delete()
    {
        await studentService.DeleteStudentAsync(_students);
        NavigationManager.NavigateTo("Students");

    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Students");
    }

}
